{"version":3,"sources":["components/BlogPostLayout.module.css","components/Pagination.module.css","utils/formats.js","components/ArticleMeta.js","components/ArticleMeta.module.css","components/BlogIndexPage.module.css","siteMetadata.js","components/Bio.js","components/Pagination.js","components/BlogIndexPage.js","components/NotFoundPage.js","components/LoadingIndicator.js","components/BlogLayout.js","components/BlogPostLayout.js","routes/posts/index.js","routes/index.js","components/LoadingIndicator.module.css","components/BlogLayout.module.css","components/ArticleSummary.js","components/ArticleSummary.module.css","components/Bio.module.css","serviceWorker.js","index.js"],"names":["module","exports","title","header","footer","bio","links","next","content","Pagination","previous","months","ArticleMeta","_ref","readingTimeElement","blogRoot","meta","readingTime","minutes","Math","max","round","cups","react_default","a","createElement","Fragment","className","styles","Array","fill","join","dateTime","date","toUTCString","dateString","Date","monthName","getMonth","dayOfMonth","getDate","fourDigitYear","getFullYear","concat","formatDate","tags","length","map","tag","key","es","href","articlesList","siteMetadata","author","description","indexPageSize","Bio","props","src","alt","rel","target","pageCount","pageNumber","dist_es","String","pages","current","count","BlogIndexPage","postRoutes","components_Bio","route","url","ArticleSummary","components_Pagination","style","float","NotFoundPage","NotFound","LoadingIndicator","active","BlogLayout","isViewingIndex","loadingRoute","useLoadingRoute","container","components_LoadingIndicator","render","components_NotFoundPage","BlogPostLayout","_useCurrentRoute","useCurrentRoute","data","_ref2","MDXComponent","pathname","index_es","components","Link","wrapper","_ref3","children","previousDetails","nextDetails","postModules","./2019-01-05-welcome/post.js","__webpack_require__","e","then","bind","./2019-02-02-howto/post.js","./2019-02-08-react/post.js","./2019-03-01-js/post.js","importPost","postPathnames","Object","keys","datePattern","postDetails","slug","slugify","replace","dateMatch","match","parseInt","posts","sortBy","reverse","i","getPage","Navi","asyncToGenerator","regenerator_default","mark","_callee2","post","getContent","previousSlug","previousPost","nextSlug","nextPost","previousPostDetails","nextPostDetails","wrap","_context2","prev","sent","default","objectWithoutProperties","abrupt","getData","req","context","objectSpread","getView","_getView","_callee","_ref4","other","_context","stop","apply","this","arguments","chunks","chunk","chunkPagePairs","pageTitle","method","Promise","all","resolve","routes","_x3","view","components_BlogIndexPage","_x","_x2","compose","withContext","mountpath","withView","path","test","components_BlogLayout","mount","/","shift","/page","/1","redirect","fromPairs","/posts","components_BlogPostLayout","/tags","lazy","/about","/rss","LoadingIndicator-animation","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_navi__WEBPACK_IMPORTED_MODULE_1__","_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__","_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default","spoiler","Boolean","window","location","hostname","register","main","_main","navigation","createBrowserNavigation","getRoute","process","renderer","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b654d6b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogPostLayout_title__2LQfx\",\"header\":\"BlogPostLayout_header__2-hPV\",\"footer\":\"BlogPostLayout_footer__cFEME\",\"bio\":\"BlogPostLayout_bio__1FZds\",\"links\":\"BlogPostLayout_links__1iOOS\",\"next\":\"BlogPostLayout_next__3F0LM\",\"content\":\"BlogPostLayout_content__QNvcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__3vwQU\",\"previous\":\"Pagination_previous__2gVzw\",\"next\":\"Pagination_next__1uu3d\"};","export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\nexport function formatDate(dateString) {\n  let date = new Date(dateString)\n  let monthName = months[date.getMonth()]\n  let dayOfMonth = date.getDate()\n  let fourDigitYear = date.getFullYear()\n\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\n}","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport { formatDate } from '../utils/formats'\nimport styles from './ArticleMeta.module.css'\n\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\n  let readingTimeElement\n  if (readingTime) {\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\n    let cups = Math.round(minutes / 5);\n    readingTimeElement =\n      <React.Fragment>\n        {' '}&bull;{' '}\n        <span className={styles.readingTime}>\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\n        </span>\n      </React.Fragment>\n  }\n      \n  return (\n    <small className={styles.ArticleMeta}>\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\n      {\n        meta.tags &&\n        meta.tags.length &&\n        <>\n          {' '}&bull;{' '}\n          <ul className={styles.tags}>\n            {meta.tags.map(tag =>\n              <li key={tag}>\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\n              </li>\n            )}\n          </ul>\n        </>\n      }\n      {readingTimeElement || null}\n    </small>\n  )\n}\n\nexport default ArticleMeta","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"ArticleMeta_tags__GefZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"BlogIndexPage_title__2EOfI\",\"articlesList\":\"BlogIndexPage_articlesList__2oYJT\",\"footer\":\"BlogIndexPage_footer__3Awxh\"};","export default {\n  // The blog's title as it appears in the layout header, and in the document\n  // <title> tag.\n  title: 'Sunny Dhama | Blog',\n\n  author: 'Sunny Dhama',\n  description:\n    'A blog that is intended to share knowledge on this matrix known as WWW',\n\n  // The number of posts to a page on the site index.\n  indexPageSize: 10,\n}\n","import React from \"react\";\nimport styles from \"./Bio.module.css\";\n\nfunction Bio(props) {\n  return (\n    <div\n      className={`\n      ${styles.Bio}\n      ${props.className || \"\"}\n    `}\n    >\n      <img\n        src=\"https://avatars0.githubusercontent.com/u/31814079?s=460&v=4\"\n        alt=\"Me\"\n      />\n      <p>\n        Welcome to my blog, I post few tech articles here mostly in Frontend Web\n        development and Machine Learning.\n        <br />\n        Lets get connected!\n        <br />\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://github.com/blackwolf08\"\n        >\n          Github\n        </a>\n        <br />\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://linkedin.com/in/sunnydhama\"\n        >\n          LinkedIn\n        </a>\n        <br />\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://sunnydhama.me\"\n        >\n          My Website\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default Bio;\n","import { join } from 'path'\nimport React from 'react'\nimport { Link } from 'react-navi'\nimport styles from './Pagination.module.css'\n\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\n  return (\n    <small className={styles.Pagination}>\n      {\n        pageNumber !== 1 &&\n        <Link\n          className={styles.previous}\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\n          ← Previous\n        </Link>\n      }\n      <span className={styles.pages}>\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\n      </span>\n      {\n        pageNumber < pageCount &&\n        <Link\n          className={styles.next}\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\n          Next →\n        </Link>\n      }\n    </small>\n  )\n}\n\nexport default Pagination","import React from \"react\";\nimport { Link } from \"react-navi\";\nimport siteMetadata from \"../siteMetadata\";\nimport ArticleSummary from \"./ArticleSummary\";\nimport Bio from \"./Bio\";\nimport Pagination from \"./Pagination\";\nimport styles from \"./BlogIndexPage.module.css\";\n\nfunction BlogIndexPage({ blogRoot, pageCount, pageNumber, postRoutes }) {\n  return (\n    <div>\n      <header>\n        <h1 className={styles.title}>\n          <Link href={blogRoot}>{siteMetadata.title}</Link>\n        </h1>\n        <Bio />\n      </header>\n      <ul className={styles.articlesList}>\n        {postRoutes.map(route => (\n          <li key={route.url.href}>\n            <ArticleSummary blogRoot={blogRoot} route={route} />\n          </li>\n        ))}\n      </ul>\n      {pageCount > 1 && (\n        <Pagination\n          blogRoot={blogRoot}\n          pageCount={pageCount}\n          pageNumber={pageNumber}\n        />\n      )}\n      <footer className={styles.footer}>\n        <div>\n          <a href=\"./rss.xml\" target=\"_blank\" style={{ float: \"right\" }}>\n            RSS\n          </a>\n          <Link href=\"./about\">About</Link> &bull;{\" \"}\n          <Link href=\"./tags\">Tags</Link>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default BlogIndexPage;\n","import React from 'react'\nimport styles from './NotFoundPage.module.css'\n\n// Note that create-react-navi-app will always show an error screen when this\n// is rendered. This is because the underlying react-scripts package shows\n// the error screen when a NotFoundError is thrown, even though it's caught\n// by <NotFoundBoundary>. To see the error rendered by this function,\n// you'll just need to close the error overlay with the \"x\" at the top right.\nfunction NotFoundPage() {\n  return (\n    <div className={styles.NotFound}>\n      <h1>404 - Not Found</h1>\n    </div>\n  )\n}\n\nexport default NotFoundPage","import React from 'react'\nimport styles from './LoadingIndicator.module.css'\n\nfunction LoadingIndicator({ active, className, style }) {\n  return (\n    <div\n      className={`\n        ${styles.LoadingIndicator}\n        ${active ? styles.active : ''}\n        ${className}\n      `}\n      style={style}\n    />\n  )\n}\n\nexport default LoadingIndicator","import React from 'react'\nimport {\n  View,\n  Link,\n  NotFoundBoundary,\n  useLoadingRoute,\n} from 'react-navi'\nimport siteMetadata from '../siteMetadata'\nimport NotFoundPage from './NotFoundPage'\nimport LoadingIndicator from './LoadingIndicator'\nimport styles from './BlogLayout.module.css'\n\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\n  let loadingRoute = useLoadingRoute()\n\n  return (\n    <div className={styles.container}>\n      <LoadingIndicator active={!!loadingRoute} />\n\n      {// Don't show the header on index pages, as it has a special header.\n      !isViewingIndex && (\n        <header>\n          <h3 className={styles.title}>\n            <Link href={blogRoot}>{siteMetadata.title}</Link>\n          </h3>\n        </header>\n      )}\n\n      <main>\n        <NotFoundBoundary render={() => <NotFoundPage />}>\n          <View />\n        </NotFoundBoundary>\n      </main>\n    </div>\n  )\n}\n\nexport default BlogLayout\n","import React from 'react'\nimport { View, Link, useCurrentRoute } from 'react-navi'\nimport { MDXProvider } from '@mdx-js/react'\nimport siteMetadata from '../siteMetadata'\nimport ArticleMeta from './ArticleMeta'\nimport Bio from './Bio'\nimport styles from './BlogPostLayout.module.css'\n\nfunction BlogPostLayout({ blogRoot }) {\n  let { title, data, url } = useCurrentRoute()\n\n  return (\n    <View>\n      {({ MDXComponent, readingTime }) =>\n        // The content for posts is an MDX component, so we'll need\n        // to use <MDXProvider> to ensure that links are rendered\n        // with <Link>, and thus use pushState.\n        <article className={styles.container}>\n          <header className={styles.header}>\n            <h1 className={styles.title}>\n              <Link href={url.pathname}>{title}</Link>\n            </h1>\n            <ArticleMeta\n              blogRoot={blogRoot}\n              meta={data}\n              readingTime={readingTime}\n            />\n          </header>\n          <MDXProvider components={{\n            a: Link,\n            wrapper: ({ children }) =>\n              <div className={styles.content}>\n                {children}\n              </div>\n          }}>\n            <MDXComponent />\n          </MDXProvider>\n          <footer className={styles.footer}>\n            <h3 className={styles.title}>\n              <Link href={blogRoot}>\n                {siteMetadata.title}\n              </Link>\n            </h3>\n            <Bio className={styles.bio} />\n            <section className={styles.links}>\n              {\n                data.previousDetails &&\n                <Link className={styles.previous} href={data.previousDetails.href}>\n                  ← {data.previousDetails.title}\n                </Link>\n              }\n              {\n                data.nextDetails &&\n                <Link className={styles.next} href={data.nextDetails.href}>\n                  {data.nextDetails.title} →\n                </Link>\n              }\n            </section>\n          </footer>\n        </article>\n      }\n    </View>\n  )\n}\n\nexport default BlogPostLayout","import importAll from 'import-all.macro'\nimport * as Navi from 'navi'\nimport { join } from 'path'\nimport { sortBy } from 'lodash'\nimport slugify from 'slugify'\n\n// Get a list of all posts, that will not be loaded until the user\n// requests them.\nconst postModules = importAll.deferred('./**/post.js')\nconst importPost = pathname => postModules[pathname]()\nconst postPathnames = Object.keys(postModules)\nconst datePattern = /^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[/-]/\n\nlet postDetails = postPathnames.map(pathname => {\n  let slug = slugify(\n    pathname.replace(/post.jsx?$/, '').replace(/(\\d)\\/(\\d)/, '$1-$2'),\n  )\n    .replace(/^[-.]+|[.-]+$/g, '')\n    .replace(datePattern, '$1/')\n\n  let date\n  let dateMatch = slug.match(datePattern)\n  if (dateMatch) {\n    date = new Date(dateMatch[2], parseInt(dateMatch[3]) - 1, dateMatch[4])\n  }\n\n  return {\n    slug,\n    pathname,\n    date,\n  }\n})\n\n// Sort the pages by slug (which contain the dates)\npostDetails = sortBy(postDetails, ['slug']).reverse()\n\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\n// that can be used to load and return the post's Page object.\nlet posts = postDetails.map(({ slug, pathname, date }, i) => ({\n  getPage: Navi.map(async () => {\n    let { default: post } = await importPost(pathname)\n    let { title, getContent, ...meta } = post\n    let previousSlug, previousPost, nextSlug, nextPost\n\n    if (i !== 0) {\n      let previousPostDetails = postDetails[i - 1]\n      previousPost = (await importPost(previousPostDetails.pathname)).default\n      previousSlug = previousPostDetails.slug\n    }\n\n    if (i + 1 < postDetails.length) {\n      let nextPostDetails = postDetails[i + 1]\n      nextPost = (await importPost(nextPostDetails.pathname)).default\n      nextSlug = nextPostDetails.slug\n    }\n\n    return Navi.route({\n      title,\n      getData: (req, context) => ({\n        date,\n        pathname,\n        slug,\n        previousDetails: previousPost && {\n          title: previousPost.title,\n          href: join(context.blogRoot, 'posts', previousSlug),\n        },\n        nextDetails: nextPost && {\n          title: nextPost.title,\n          href: join(context.blogRoot, 'posts', nextSlug),\n        },\n        ...meta,\n      }),\n      getView: async () => {\n        let { default: MDXComponent, ...other } = await getContent()\n        return { MDXComponent, ...other }\n      },\n    })\n  }),\n  slug,\n}))\n\nexport default posts\n","import { compose, lazy, map, mount, redirect, resolve, route, withContext, withView } from 'navi'\nimport React from 'react'\nimport { join } from 'path'\nimport { chunk, fromPairs } from 'lodash'\nimport BlogIndexPage from '../components/BlogIndexPage'\nimport BlogLayout from '../components/BlogLayout'\nimport BlogPostLayout from '../components/BlogPostLayout'\nimport siteMetadata from '../siteMetadata'\nimport posts from './posts'\n\n// Split the posts into a list of chunks of the given size, and\n// then build index pages for each chunk.\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\nlet chunkPagePairs = chunks.map((chunk, i) => [\n  '/' + (i + 1),\n  map(async (req, context) => {\n    // Don't load anything when just crawling\n    if (req.method === 'HEAD') {\n      return route()\n    }\n\n    // Get metadata for all pages on this page\n    let postRoutes = await Promise.all(\n      chunk.map(async post => {\n        let href = join(context.blogRoot, 'posts', post.slug)\n        return await resolve({\n          // If you want to show the page content on the index page, set\n          // this to 'GET' to be able to access it.\n          method: 'HEAD',\n          routes,\n          url: href,\n        })\n      }),\n    )\n\n    // Only add a page number to the page title after the first index page.\n    let pageTitle = siteMetadata.title\n    if (i > 0) {\n      pageTitle += ` – page ${i + 1}`\n    }\n\n    return route({\n      title: pageTitle,\n      view: (\n        <BlogIndexPage\n          blogRoot={context.blogRoot}\n          pageNumber={i + 1}\n          pageCount={chunks.length}\n          postRoutes={postRoutes}\n        />\n      ),\n    })\n  }),\n])\n\nconst routes = compose(\n  withContext((req, context) => ({\n    ...context,\n    blogRoot: req.mountpath || '/',\n  })),\n  withView((req, context) => {\n    // Check if the current page is an index page by comparing the remaining\n    // portion of the URL's pathname with the index page paths.\n    let isViewingIndex = req.path === '/' || /^\\/page\\/\\d+\\/$/.test(req.path)\n\n    // Render the application-wide layout\n    return (\n      <BlogLayout\n        blogRoot={context.blogRoot}\n        isViewingIndex={isViewingIndex}\n      />\n    )\n  }),\n  mount({\n    // The blog's index pages go here. The first index page is mapped to the\n    // root URL, with a redirect from \"/page/1\". Subsequent index pages are\n    // mapped to \"/page/n\".\n    '/': chunkPagePairs.shift()[1],\n    '/page': mount({\n      '/1': redirect((req, context) => context.blogRoot),\n      ...fromPairs(chunkPagePairs),\n    }),\n\n    // Put posts under \"/posts\", so that they can be wrapped with a\n    // \"<BlogPostLayout />\" that configures MDX and adds a post-specific layout.\n    '/posts': compose(\n      withView((req, context) => <BlogPostLayout blogRoot={context.blogRoot} />),\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\n    ),\n\n    // Miscellaneous pages can be added directly to the root switch.\n    '/tags': lazy(() => import('./tags')),\n    '/about': lazy(() => import('./about')),\n\n    // Only the statically built copy of the RSS feed is intended to be opened,\n    // but the route is defined here so that the static renderer will pick it\n    // up.\n    '/rss': route(),\n  }),\n)\n\nexport default routes\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadingIndicator\":\"LoadingIndicator_LoadingIndicator__OwjnP\",\"active\":\"LoadingIndicator_active__2irgV\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__3V7k8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BlogLayout_container__3g9-H\",\"title\":\"BlogLayout_title__1ieGe\"};","import React from 'react'\nimport { Link } from 'react-navi'\nimport ArticleMeta from './ArticleMeta'\nimport styles from './ArticleSummary.module.css'\n\nfunction ArticleSummary({ blogRoot, route }) {\n  return (\n    <article className={styles.ArticleSummary}>\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\n      <p>{route.data.spoiler}</p>\n    </article>\n  )\n}\n\nexport default ArticleSummary","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArticleSummary\":\"ArticleSummary_ArticleSummary__uqHGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bio\":\"Bio_Bio__B6T3R\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import register from \"navi-scripts/register\";\nimport { createBrowserNavigation } from \"navi\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-navi\";\nimport \"./index.module.css\";\nimport routes from \"./routes\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// `register()` is responsible for exporting your app's pages and App\n// component to the static renderer, and for starting the app with the\n// `main()` function when running within a browser.\nregister({\n  // Specify the pages that navi-app should statically build, by passing in a\n  // Switch object.\n  routes,\n\n  // This will only be called when loading your app in the browser. It won't\n  // be called when performing static generation.\n  async main() {\n    let navigation = createBrowserNavigation({ routes });\n\n    // Wait until the navigation has loaded the page's content, or failed to do\n    // so. If you want to load other data in parallel while the initial page is\n    // loading, make sure to start loading before this line.\n    await navigation.getRoute();\n\n    // React requires that you call `ReactDOM.hydrate` if there is statically\n    // rendered content in the root element, but prefers us to call\n    // `ReactDOM.render` when it is empty.\n    let hasStaticContent = process.env.NODE_ENV === \"production\";\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\n\n    // Start react, passing in the current navigation state and\n    // rendering the top-level view.\n    renderer(\n      <Router navigation={navigation} />,\n      document.getElementById(\"root\")\n    )\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: http://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n  }\n});\n"],"sourceRoot":""}