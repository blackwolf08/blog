{"version":3,"sources":["routes/posts/2019-03-01-js/document.mdx","routes/posts/2019-03-01-js/document.module.css","routes/posts/2019-03-01-js/cover.png","routes/posts/2019-03-01-js/jstexttut.gif"],"names":["readingTime","text","minutes","time","words","layoutProps","MDXLayout","MDXContent","_ref","components","props","Object","C_Users_sunny_Desktop_Projects_blog_template_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_mdx_js_react__WEBPACK_IMPORTED_MODULE_2__","assign","mdxType","className","styles","alt","src","cover","gifImg","parentName","data-language","data-highlighted-line-numbers","dangerouslySetInnerHTML","__html","isMDXComponent","tableOfContents","arguments","length","undefined","frontMatter","module","exports","img-cover","__webpack_require__","p"],"mappings":"sVAGaA,EAAc,CAACC,KAAO,aAAaC,QAAU,MAAMC,KAAO,OAAOC,MAAQ,KAWhFC,EAAc,GAGdC,EAAY,UACH,SAASC,EAATC,GAGZ,IAFDC,EAECD,EAFDC,WACGC,EACFC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,gBACD,OAAOG,OAAAE,EAAA,EAAAF,CAACL,EAADK,OAAAG,OAAA,GAAeT,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYM,QAAQ,cAE5EJ,OAAAE,EAAA,EAAAF,CAAA,OAAKK,UAAWC,IAAM,SACpBN,OAAAE,EAAA,EAAAF,CAAA,OAAKK,UAAWC,IAAO,aAAcC,IAAI,eAAeC,IAAKC,MAD/D,sUAGET,OAAAE,EAAA,EAAAF,CAAA,sMACAA,OAAAE,EAAA,EAAAF,CAAA,OAAKK,UAAWC,IAAO,aAAcC,IAAI,mBAAmBC,IAAKE,MAJnE,kFAMEV,OAAAE,EAAA,EAAAF,CAAA,4CACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMQ,WAAW,OAAU,CAC5BN,UAAa,kBACbO,gBAAiB,SACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,k3JAGhBf,OAAAE,EAAA,EAAAF,CAAA,uNACAA,OAAAE,EAAA,EAAAF,CAAA,2CACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMQ,WAAW,OAAU,CAC5BN,UAAa,eACbO,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,u3EAGhBf,OAAAE,EAAA,EAAAF,CAAA,mXACAA,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQW,WAAW,KAAnB,SAAH,yLACAX,OAAAE,EAAA,EAAAF,CAAA,2CACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMQ,WAAW,OAAU,CAC5BN,UAAa,eACbO,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,8/HAGhBf,OAAAE,EAAA,EAAAF,CAAA,SAAGA,OAAAE,EAAA,EAAAF,CAAA,UAAQW,WAAW,KAAnB,gBAAH,qOAEAX,OAAAE,EAAA,EAAAF,CAAA,wTACAA,OAAAE,EAAA,EAAAF,CAAA,8eACAA,OAAAE,EAAA,EAAAF,CAAA,ydACAA,OAAAE,EAAA,EAAAF,CAAA,oUACAA,OAAAE,EAAA,EAAAF,CAAA,kKACAA,OAAAE,EAAA,EAAAF,CAAA,WAAKA,OAAAE,EAAA,EAAAF,CAAA,OAAAA,OAAAG,OAAA,CAAMQ,WAAW,OAAU,CAC5BN,UAAa,eACbO,gBAAiB,MACjBC,gCAAiC,GACjCC,wBAA2B,CACzBC,OAAU,2jBAGhBf,OAAAE,EAAA,EAAAF,CAAA,oOACAA,OAAAE,EAAA,EAAAF,CAAA,2BAKNJ,EAAWoB,gBAAiB,EACrB,IAAMC,EAAkB,WAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,SAAmB,IAIrCG,EAAc,uBCrF3BC,EAAAC,QAAA,CAAkBC,YAAA,iDCDlBF,EAAAC,QAAiBE,EAAAC,EAAuB,sDCAxCJ,EAAAC,QAAiBE,EAAAC,EAAuB","file":"static/js/4.5a242986.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.345,\"time\":260700,\"words\":869}\n/* @jsx mdx */\nimport styles from './document.module.css'\nimport cover from './cover.png'\nimport gifImg from './jstexttut.gif'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <div className={styles[\"Welcome\"]}>\n      <img className={styles[\"img-cover\"]} alt=\"tex-changing\" src={cover} />\nEver since I used a text effect on my portfolio website, many peers have asked me of what module did I use to acheive the effect of text transition there? But the truth is, I didnâ€™t. There was no need, as the implementation is easy itself. You can check out my portfolio website to know what effect I am talking about.\n      <p>{`Well, in this post, we are going to learn how to create a text transition effect using vanilla JS and CSS for yourself. To get an idea about what we will be creating take a look at this`}</p>\n      <img className={styles[\"img-cover\"]} alt=\"tex-changing-gif\" src={gifImg} />\nFor this tutorial, we will use three files - index.html, style.css & script.js.\n      <p>{`Contents of the index.html file`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-markup\",\n          \"data-language\": \"markup\",\n          \"data-highlighted-line-numbers\": \"\",\n          \"dangerouslySetInnerHTML\": {\n            \"__html\": \"<span class=\\\"token doctype\\\">&lt;!DOCTYPE html></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>html</span> <span class=\\\"token attr-name\\\">lang</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>en<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">charset</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>UTF-8<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>viewport<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">content</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>width=device-width, initial-scale=1.0<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>meta</span> <span class=\\\"token attr-name\\\">http-equiv</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>X-UA-Compatible<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">content</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>ie=edge<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>link</span> <span class=\\\"token attr-name\\\">rel</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>stylesheet<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>style.css<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>title</span><span class=\\\"token punctuation\\\">></span></span>JS Text Transition<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>title</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>head</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token comment\\\">&lt;!-- Element where we will display the text --></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">'</span>heading<span class=\\\"token punctuation\\\">'</span></span> <span class=\\\"token attr-name\\\">class</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">'</span><span class=\\\"token punctuation\\\">'</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>script</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>script.js<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token script\\\"></span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>script</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>body</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>html</span><span class=\\\"token punctuation\\\">></span></span>\\n\"\n          }\n        }}></code></pre>\n      <p>{`A minimal HTML file, with links to style.css and script.js. Also, we created a paragraph element with id â€˜headingâ€™, which we will be targeting for text insertion and updation using JavaScript.`}</p>\n      <p>{`Contents of the style.css file`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-css\",\n          \"data-language\": \"css\",\n          \"data-highlighted-line-numbers\": \"\",\n          \"dangerouslySetInnerHTML\": {\n            \"__html\": \"<span class=\\\"token selector\\\">p</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">/* Style it as you want */</span>\\n    <span class=\\\"token property\\\">position</span><span class=\\\"token punctuation\\\">:</span> fixed<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">top</span><span class=\\\"token punctuation\\\">:</span> 50%<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">left</span><span class=\\\"token punctuation\\\">:</span> 50%<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">margin</span><span class=\\\"token punctuation\\\">:</span> 0px<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">transform</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">translate</span><span class=\\\"token punctuation\\\">(</span>-50%<span class=\\\"token punctuation\\\">,</span> -50%<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">font-family</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Montserrat'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">font-weight</span><span class=\\\"token punctuation\\\">:</span> 400<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">font-size</span><span class=\\\"token punctuation\\\">:</span> 5em<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">rgb</span><span class=\\\"token punctuation\\\">(</span>60<span class=\\\"token punctuation\\\">,</span> 60<span class=\\\"token punctuation\\\">,</span> 60<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">/* Necessary styles */</span>\\n    <span class=\\\"token property\\\">opacity</span><span class=\\\"token punctuation\\\">:</span> 1<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token property\\\">transition</span><span class=\\\"token punctuation\\\">:</span> 0.2s linear<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token selector\\\">.invisible</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">opacity</span><span class=\\\"token punctuation\\\">:</span> 0<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n          }\n        }}></code></pre>\n      <p>{`The style rules for the paragraph elements. Not all rules are necessary, only the opacity and transition rules are needed for this method to work. Also, the invisible class changes the elementâ€™s opacity to 0. Initially the opacity is 1, which means that it is completely visible. When the opacity is set to 0, the element becomes completely transparent.`}</p>\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` I have installed Montserrat font on my system, so there was no need to import it, but if you want to use Montserrat, and donâ€™t have it installed, you can visit here to get it.`}</p>\n      <p>{`Contents of the script.js file`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"data-language\": \"jsx\",\n          \"data-highlighted-line-numbers\": \"\",\n          \"dangerouslySetInnerHTML\": {\n            \"__html\": \"<span class=\\\"token comment\\\">// Values we want to display</span>\\n<span class=\\\"token keyword\\\">let</span> text <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'Apple'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Mango'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Orange'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Watermelon'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token comment\\\">// index of the next element we want to display</span>\\n<span class=\\\"token keyword\\\">let</span> currentIndex <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span>\\n\\nwindow<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">onload</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> paragraph <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'heading'</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token comment\\\">// Set the innerHTML to first value</span>\\n    paragraph<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> text<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span>\\n\\n    <span class=\\\"token function\\\">setInterval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">//  Fade out our element</span>\\n        paragraph<span class=\\\"token punctuation\\\">.</span>className <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'invisible'</span>\\n\\n        <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            paragraph<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> text<span class=\\\"token punctuation\\\">[</span>currentIndex<span class=\\\"token punctuation\\\">]</span>\\n\\n            <span class=\\\"token comment\\\">// Circular incrementation of currentIndex variable</span>\\n            currentIndex <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span> currentIndex <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">%</span> text<span class=\\\"token punctuation\\\">.</span>length\\n\\n            <span class=\\\"token function\\\">setTimeout</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token comment\\\">// Fade in our element</span>\\n                paragraph<span class=\\\"token punctuation\\\">.</span>className <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">''</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">50</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">200</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\"\n          }\n        }}></code></pre>\n      <p><strong parentName=\"p\">{`Explaination`}</strong>{`\nThe text variable contains an array of all the strings we wish to display in the target element. Also we set the currentIndex variable to 1, as we will be inserting the first element ( indexed 0 ) of text variable manually.`}</p>\n      <p>{`Then we use the onload property of window object, to trigger our transition function as soon as the document has finished loading. We target the element where we want to display our strings as paragraph, and set itâ€™s innerHTML property to text`}{`[0]`}{` i.e. the first element of the text array.`}</p>\n      <p>{`Then we create an interval which calls a function every 3000 milliseconds i.e. 3 seconds. This is the time for which the text will be shown to the user. At the start of the interval, we add an invisible class to our element. As per the transition CSS rule of the element, it will take our element 200 milliseconds to completely fade out, so we set a timeout of 200 milliseconds to wait for our element to completely fade out, and then we change the innerHTML to next value of text.`}</p>\n      <p>{`We also set the currentIndex to the next element in a circular manner. We want it to iterate circularly, so we add a modulus operator after the increment. Our text array has a length of 4, so the currentIndex can take values 0, 1, 2, 3. When the currentIndex value is 3, after the next increment, it becomes 4, which is out of bounds for our array, so we use â€˜%â€™ operator, which returns the remainder. So 4%4 becomes 0, and we start from there again.`}</p>\n      <p>{`For this operation, we give it a timeout of 50 milliseconds ( more than needed ). Then we set the className property to an empty string i.e. we remove the invisible class. Now, paragraph elementâ€™s opacity becomes 1, and due to transition time being 200 milliseconds, it slowly fades in in 200 milliseconds.`}</p>\n      <p>{`As we used setInterval function, the function will be called infinitely, but if you intend to stop the animation, you can using the following method.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"data-language\": \"jsx\",\n          \"data-highlighted-line-numbers\": \"\",\n          \"dangerouslySetInnerHTML\": {\n            \"__html\": \"<span class=\\\"token comment\\\">// Create our interval, and store it in a variable</span>\\n<span class=\\\"token keyword\\\">let</span> interval <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">setInterval</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// Remove the interval using clearInterval()</span>\\n<span class=\\\"token function\\\">clearInterval</span><span class=\\\"token punctuation\\\">(</span>interval<span class=\\\"token punctuation\\\">)</span>\\n\"\n          }\n        }}></code></pre>\n      <p>{`Thatâ€™s it, now youâ€™ve created your own text transition effect using Vanilla JS and CSS. If you face any difficulties, or have any improvements to share, you can comment down below. Thank you for your time!`}</p>\n      <p>{`Adios folks!`}</p>\n    </div>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-cover\":\"document_img-cover__Pwgr-\"};","module.exports = __webpack_public_path__ + \"static/media/cover.7eb18016.png\";","module.exports = __webpack_public_path__ + \"static/media/jstexttut.1b7a0516.gif\";"],"sourceRoot":""}